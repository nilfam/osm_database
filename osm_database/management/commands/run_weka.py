import numpy as np
import weka.core.jvm as jvm
from django.core.management import BaseCommand

from osm_database.weka_model.weka_util import WekaModel, ExpressionFeatureExtraction


class Command(BaseCommand):
    def add_arguments(self, parser):
        # parser.add_argument('--folder', action='store', dest='folder', required=True, type=str)
        # parser.add_argument('--commit', action='store_true', dest='commit', default=False)
        pass

    def handle(self, *args, **options):
        # with open('/tmp/blah.txt', 'w') as f:
        #     for type in OsmEntity.objects.values_list('type', flat=True).distinct():
        #         f.write(type)
        #         f.write('\n')
        #
        # exit(0)

        jvm.start(system_cp=True, packages=True, max_heap_size="512m", system_info=True)
        try:
            weka_model = WekaModel('osm_database/weka_model/connors-1000.model')

            row1 = [1,34.669406,56.00606425,-3.515831455,1,1,1,1,1,0,1,0,0,0,0,1,0,1,1,0,1,1,1,0,1,0,0,1,0,0,1,0,0.675384,0.1446508,-0.32070598,-0.0744272,0.12731001,-0.413742,-0.152102,0.37809062,-0.583518,-0.47108203,-0.366906,-0.141254,-0.1501162,-0.58091056,-0.25357443,0.45896998,0.28657597,0.25359198,-1.160526,0.093049794,0.6409748,0.27904722,-0.4263966,-0.1712954,0.007837999,-1.029994,0.20556203,0.55759203,0.4495832,-0.29095,1.78567,-0.2234072,0.029893005,-0.21364939,0.41934204,0.30608666,0.410784,-0.27363497,0.012500793,0.25742683,0.252009,0.10653359,-0.011953592,-0.023495797,-0.275248,0.07057999,0.12701319,-0.41759402,0.124020204,-0.39145598,1.2905,0.40233,-0.37805,0.74917,-0.58172,-1.0446,-0.98862,0.38759,0.25985,-0.50311,0.23243,0.49763,0.75212,-0.86457,-0.67829,0.14632,-0.12788,0.70994,-1.2826,0.34561,0.86046,-0.066264,-0.90563,0.34611,-0.11264,-1.672,1.4062,0.61534,0.6683,-0.14574,2.3288,-0.046436,-0.23412,-0.037541,1.1395,0.29628,-0.11504,-0.27498,-0.054976,1.093,0.55523,0.85871,0.96032,-1.0063,-0.79771,0.5941,-0.37022,-0.21733,0.80247,-0.68911,1.0917,1.4104,-0.64909,0.81587,0.20747,-0.04992,-0.38466,-0.28437,0.44526,0.81363,-0.075357,-0.042654,0.59763,-0.074845,0.38635,0.35085,0.56678,0.65965,-0.85589,-0.072154,0.44802,-0.26678,-1.4519,0.65189,0.58763,-0.61029,-0.67536,0.23116,0.63838,0.1366,1.6251,0.44513,0.63424,-0.857,-0.10406,0.076066,-0.21183,-0.32759,-0.82114,-0.18919,-0.41903,-0.052646,-0.27433,0.36018,-0.0013141,-0.48941,0.0027923,-0.87137,0.57953,0.073362,0.627,0.419,0.447,0.434,0.351,0.465,1,0.53,0.354,0.488,0.654,0.465,0.892,0.881,0.523,0.402,0.493,0.804,0.406,0.509,0.522,0.43,0.379,0.342,0.029166667,0.026388889,0.004444444,0.009722222,0.029722222,0.030277778,0.032777778,0.029444444,0.033333333,0.028611111,0.03,0.009444444,0.022777778,0.012222222,0.020555556,0.023888889,0.013888889,0.016388889,0.048611111,0.064444444,0.016944444,0.048888889,0.048333333,0.045555556,0.021388889,0.072222222,0.008055556,0.015833333,0.028055556,0.015833333,0.017222222,0.014722222,0.026111111,0.011388889,0.040833333,0.041944444,0.0175,0.033888889,0.024722222,0.124722222,0.044166667,0.007777778,0.025277778,0.010277778,0.0125,0.034166667,0.015833333,0.012777778,0.041944444,0.010555556,0.022777778,0.043333333,0.126944444,0.043611111,0.039166667]
            row2 = [3,67.733209,51.6243612,-4.9012945,1,1,1,1,1,0,1,0,0,0,1,0,0,1,1,1,1,1,1,0,0,0,0,1,1,0,0,1,0.46912,0.09707249,-0.22780001,-0.042211995,0.42819977,-0.428512,-0.3112745,-0.48189253,0.1323175,-0.264935,-0.234015,0.13032499,-0.16505751,-0.22381699,-0.116799235,0.3990525,0.11119774,0.012140002,-0.720145,0.21598226,0.92033,-0.0661575,-0.070249006,0.08110862,-0.1496725,-0.26262748,0.48952252,0.259828,-0.025875747,-0.09751323,1.4467725,-0.17589776,0.6139662,-0.37014002,-0.05972575,-0.019840002,0.0644425,-0.14110632,0.14458999,0.30015874,-0.1630495,-0.15195574,-0.198297,0.12128444,0.133295,-0.06333497,0.22008625,-0.56762755,0.1811475,-0.03318251,0.52937,-0.28307,-0.261,0.097073,0.20905,-0.065966,0.053632,-0.3806,0.64946,0.74585,0.69589,-0.65328,0.17086,0.16368,-0.052837,0.40613,-0.060179,-0.34618,-0.61729,0.20136,0.82436,-0.55406,0.013927,0.01525,-0.51169,-0.74126,0.13539,-0.013669,1.0116,0.91089,3.2453,-0.055916,0.37984,-1.553,-0.42328,-0.23783,-0.51467,-0.55631,-0.30585,0.56,-0.90403,-0.50843,-0.51165,0.3047,0.73138,-1.2087,0.51148,0.37159,0.11049,0.47064,0.85795,0.75047,-0.5937,0.15578,0.6474,0.30887,0.35471,0.1111,-0.19179,-0.68283,0.74577,-0.65295,1.4544,-0.70917,0.031577,0.79855,0.80276,0.74451,0.0094152,1.3492,-0.67083,-1.6599,-0.76248,1.2157,0.095042,-0.18966,-0.6965,0.54866,0.021641,-0.51042,1.5243,-0.81321,0.87088,-0.49093,0.66836,0.42001,0.64046,0.1513,0.3406,0.54477,-0.3917,-0.25017,0.3389,-0.23514,-1.1858,-0.13998,0.22918,0.4774,0.9603,-0.050803,0.627,0.419,0.447,0.434,0.351,0.465,1,0.53,0.354,0.488,0.654,0.465,0.892,0.881,0.523,0.402,0.493,0.804,0.406,0.509,0.522,0.43,0.379,0.342,0.029166667,0.026388889,0.004444444,0.009722222,0.029722222,0.030277778,0.032777778,0.029444444,0.033333333,0.028611111,0.03,0.009444444,0.022777778,0.012222222,0.020555556,0.023888889,0.013888889,0.016388889,0.048611111,0.064444444,0.016944444,0.048888889,0.048333333,0.045555556,0.021388889,0.072222222,0.008055556,0.015833333,0.028055556,0.015833333,0.017222222,0.014722222,0.026111111,0.011388889,0.040833333,0.041944444,0.0175,0.033888889,0.024722222,0.124722222,0.044166667,0.007777778,0.025277778,0.010277778,0.0125,0.034166667,0.015833333,0.012777778,0.041944444,0.010555556,0.022777778,0.043333333,0.126944444,0.043611111,0.039166667]

            feature_extractor = ExpressionFeatureExtraction()
            "Firing port at Blackness Castle"
            embed = feature_extractor.embed('Firing port', 'at', 'Blackness Castle', 56.00606425, -3.515831455, 'port', 'attraction')
            row1a = weka_model.convert_embed(embed)

            print(weka_model.predict(row1))
            print(weka_model.predict(row1a))
            print(weka_model.predict(row2))

            # from weka.classifiers import Evaluation
            # evaluation = Evaluation(data)
            # evl = evaluation.test_model(classifier, data)
            # print(evl)
            # print(evaluation.summary())

            # output predictions
            # print("# - actual - predicted - error")
            # full_data = converters.load_any_file(
            #     '/Users/yfukuzaw/workspace/azizam/osm_database/osm_database/weka_model/connorsLessthan1000-removeddvss.csv',
            #     class_index="1")
            # for index, inst in enumerate(full_data):
            #     pred = classifier.classify_instance(inst)
            #     correct = inst.get_value(inst.class_index)
            #     print("{} - {} - {} - {}".format(index + 1, pred, correct, abs(pred - correct)))
        finally:
            """
            """
            jvm.stop()





